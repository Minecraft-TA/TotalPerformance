buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'

version = mod_version
group = mod_group
archivesBaseName = "TotalPerformance"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }

        server {
            property 'fml.coreMods.load', mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    annotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
}

mixin {
    debug.verbose = true
    debug.export = true
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version

    setDuplicatesStrategy(DuplicatesStrategy.WARN)
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': minecraft_version, 'mod_description': mod_description,
                'mod_author': mod_author
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    from {
        configurations.embed
                .filter { "mixin-0.8.3-SNAPSHOT.jar" == it.name }
                .collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "FMLCorePlugin": mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
        attributes "FMLCorePluginContainsFMLMod": "false"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
        attributes "MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id)
    }
}

jar.finalizedBy('reobfJar')